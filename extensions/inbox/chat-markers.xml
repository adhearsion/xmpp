<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>Chat Markers</title>
  <abstract>This specification describes a solution of marking the last received, displayed and acknowledged message in a chat.</abstract>
  <legal>
    <copyright>This XMPP Extension Protocol is copyright (c) 1999 - 2013 by the XMPP Standards Foundation (XSF).</copyright>
    <permissions>Permission is hereby granted, free of charge, to any person obtaining a copy of this specification (the &quot;Specification&quot;), to make use of the Specification without restriction, including without limitation the rights to implement the Specification in a software program, deploy the Specification in a network service, and copy, modify, merge, publish, translate, distribute, sublicense, or sell copies of the Specification, and to permit persons to whom the Specification is furnished to do so, subject to the condition that the foregoing copyright notice and this permission notice shall be included in all copies or substantial portions of the Specification. Unless separate permission is granted, modified works that are redistributed shall not contain misleading information regarding the authors, title, number, or publisher of the Specification, and shall not claim endorsement of the modified works by the authors, any organization or project to which the authors belong, or the XMPP Standards Foundation.</permissions>
    <warranty>## NOTE WELL: This Specification is provided on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. In no event shall the XMPP Standards Foundation or the authors of this Specification be liable for any claim, damages, or other liability, whether in an action of contract, tort, or otherwise, arising from, out of, or in connection with the Specification or the implementation, deployment, or other use of the Specification. ##</warranty>
    <liability>In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall the XMPP Standards Foundation or any author of this Specification be liable for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising out of the use or inability to use the Specification (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if the XMPP Standards Foundation or such author has been advised of the possibility of such damages.</liability>
    <conformance>This XMPP Extension Protocol has been contributed in full conformance with the XSF's Intellectual Property Rights Policy (a copy of which may be found at &lt;<link url='http://www.xmpp.org/extensions/ipr-policy.shtml'>http://www.xmpp.org/extensions/ipr-policy.shtml</link>&gt; or obtained by writing to XSF, P.O. Box 1641, Denver, CO 80201 USA).</conformance>
  </legal>
  <number>xxxx</number>
  <status>ProtoXEP</status>
  <type>Standards Track</type>
  <sig>Standards</sig>
  <approver>Council</approver>
  <dependencies>
    <spec>XMPP Core</spec>
    <spec>XEP-0001</spec>
    <spec>Etc.</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>NOT_YET_ASSIGNED</shortname>
  <author>
    <firstname>Spencer</firstname>
    <surname>MacDonald</surname>
    <email>im@spencermacdonald.com</email>
    <jid>im@spencermacdonald.com</jid>
  </author>
  <revision>
    <version>0.0.3</version>
    <date>2013-06-20</date>
    <initials>sdm</initials>
    <remark>
      <p>Changed read Chat Marker to displayed.</p>
      <p>Removed stamp from Chat Marker.</p>
      <p>Added thread to Chat Marker.</p>
      <p>Changed namespace to allow for versioning.</p>
    </remark>
  </revision>
  <revision>
    <version>0.0.2</version>
    <date>2013-06-11</date>
    <initials>sdm</initials>
    <remark><p>Change to a message based protocol.</p></remark>
  </revision>
  <revision>
    <version>0.0.1</version>
    <date>2013-05-24</date>
    <initials>sdm</initials>
    <remark><p>First draft.</p></remark>
  </revision>
</header>
<section1 topic='Introduction' anchor='intro'>
  <p>The concept of delivery and read receipts has been popularised by other messaging services such as iMessage, Google Hangouts and Blackberry Messenger. 
  These services provide a visual indication of when a message has been delivered to any of the recipients resources and (optionally) when it has been read. 
  These visual indications (referred to herein as "Chat Markers") are synced between all of the sender's 
  and recipient's resources automatically, so the state of a chat is always consistent. 
  If one or more of the resources is not connected, it can fetch Chat Markers from the Message Archive upon reconnecting.</p>
  
	<p>&xep0184; currently provides delivery receipts on a per message basis, 
	but it does not provide any mechanism for the user to indicate that they have read or acknowledged the message. 
	As delivery receipts are sent on a per message basis it would require multiple messages to "sync up" up delivery receipts between resources.</p>
  <p>Moreover by using &xep0085; you could infer that a message has been read by the recipient, if they become active at any point after the message has been delivered, but again it would require multiple messages to "sync up" chat states between resources.</p>
	<p>This XEP outlines an efficient message based protocol to provide this functionally using Chat Markers.</p>
</section1>

<section1 topic='Terminology' anchor='terms'>
  <p>The term "active chat" refers to a chat that a user is currently active in. See &xep0085;.</p>
  <p>The term "system notification" refers to a notification (typically a preview) that is displayed separately to a Chat.</p>
  <p>The term "read" in the context of iMessage, Google Hangouts and Blackberry Messenger, directly maps to the displayed element in the Chat Marker namespace.</p>
</section1>
<section1 topic='Requirements' anchor='reqs'>
  <p>This document addresses the following requirements:</p>
  <ol>
    <li>Enable a client to mark the last received message in a chat.</li>
    <li>Enable a client to mark the last displayed message in a chat.</li>
    <li>Enable a client to mark the last acknowledged message in a chat.</li>
    <li>Enable a client to fetch and set Chat Markers regardless of wether the other users in a chat are online.</li>
  </ol>
</section1>

<section1 topic='Chat Markers' anchor='chat-markers'>
  <p>Chat Markers use a dedicated protocol extension qualified by the 'urn:xmpp:chat-markers:0' namespace.</p>
  <p>There are three allowable elements in this namespace (in order of significance):</p>
  <ul>
    <li>received -- the message has been received by a client.</li>
    <li>displayed -- the message has been displayed to a user in a active chat and not in a system notification.</li>
    <li>acknowledged -- the message has been acknowledged by some user interaction e.g. pressing an acknowledgement button.</li>
  </ul>

  <p>The Chat Marker MUST have an 'id' which is the 'id' of the message being marked.</p>
  <p>The Chat Marker MUST have a 'thread' if the message has been received, displayed or acknowledged in the context of a thread.</p>
  <p>A Chat Marker Indicates that all messages up to and including that message 'id' have been marked. If a thread is supplied, a Chat Marker is only valid in the context of that thread.</p>
  <example caption='Example Chat Marker'>
<![CDATA[      
<message
    from='kingrichard@royalty.england.lit/throne'
    id='bi29sg183b4v'
    to='northumberland@shakespeare.lit/westminster'>
  <received xmlns='urn:xmpp:chat-markers:0' 
               id='richard2-4.1.247'
           thread='sleeping'/>
</message>
]]>
	</example>
</section1>

<section1 topic='When to send Chat Markers' anchor='when'>

  <section2 topic='Bare JID' anchor='when-bare'>
    <p>If the sender knows only the recipient's bare JID, it cannot cannot determine (via &xep0030; or &xep0115;) whether the intended recipient supports the Chat Markers protocol. In this case, the sender MAY send a chat marker.</p>
  </section2>
  <section2 topic='Full JID' anchor='when-full'>
    <p>If the sender knows a full JID for the recipient (e.g., via presence), it SHOULD attempt to determine (via service disco or entity capabilities) whether the client at that full JID supports the Chat Markers protocol before attempting to send a Chat Marker.</p>
    <p>If the sender determines that the recipient's client does not support the Chat Markers protocol then it SHOULD NOT send Chat Markers.</p>
    <p>If the sender determines that the recipient's client supports the Chat Markers protocol then it MAY send a Chat Marker to that full JID.</p>
  </section2>
  <section2 topic='Chat Marker' anchor='when-chat-marker'>
    <p>To prevent looping, an entity MUST NOT send a Chat Maker to mark up to a Chat Marker.</p>
  </section2>
</section1>

<section1 topic='Requirements' anchor='requirements'>
  <p>Clients SHOULD use &xep0280; to support multiple online resources.</p>
  <p>Clients SHOULD  use &xep0136; or &xep0313; to support offline updating of Chat Markers. Chat Markers SHOULD be archived, so they can be fetched and set regardless of wether the other users in a chat are online.</p>
  <p>Messages MUST have an 'id' to use Chat Markers.</p>
  <p>Chat Markers MUST only move forward. If a Chat Maker is received for an earlier message than the current Chat Marker, it MUST be ignored by the client.
  </p>
</section1>

<section1 topic='Business Rules' anchor='rules'>
  <section2 topic='Optimizations' anchor='chatstates'>
    <p>Less Significant Chat Markers SHOULD only be sent if they are later than the more significant Chat Marker i.e. if a Message has been marked as displayed, 
      a received Chat Marker should only be sent if it has a later timestamp than the displayed Chat Marker.</p>
    <p>To avoid sending redundant Chat Markers while retrieving archived messages, Chat Markers SHOULD only be sent after retrieving the most recent message for a chat.</p>
  </section2>
  <section2 topic='Never Auto Acknowledge' anchor='never-auto-acknowledge'>
    <p>Clients MUST NOT mark a message as acknowledged without any user interaction.</p>
  </section2>
  <section2 topic='Marking Sent Messages' anchor='marking-sent-messages'>
    <p>Clients MAY mark a sent message, as Chat Markers are inclusive of of both previously sent and received messages.</p>
  </section2>
  <section2 topic='Interaction with Delivery Receipts' anchor='receipts'>
    <p>If a delivery receipt is sent to a resource that advertises support, 
      then a delivery receipt MUST be sent if it is satisfies &xep0184;.</p>
    <p>If a resource advertises both Chat Maker and Delivery Receipt support it 
      SHOULD NOT request a receipt.</p>
  </section2>
  <section2 topic='Interaction with Chat States' anchor='chatstates'>
    <p>Chat Markers MAY be used alongside Chat States.</p>
  </section2>
</section1>

<section1 topic='Determining support' anchor='disco'>
	<p>If an entity supports the Chat Markers protocol, it MUST report that by including a &xep0030;
	 feature of "urn:xmpp:chat-markers:0" in response to disco#info requests:</p>
<example caption='Client queries for server features'>
<![CDATA[
<iq type='get' id='disco1' to='capulet.lit' from='juliet@capulet.lit/balcony'>
  <query xmlns='http://jabber.org/protocol/disco#info'/>
</iq>
]]>
</example>

<example caption='Server responds with features'>
<![CDATA[
<iq type='result' id='disco1' from='capulet.lit' to='juliet@capulet.lit/balcony'>
  <query xmlns='http://jabber.org/protocol/disco#info'>
    ...
    <feature var='urn:xmpp:chat-markers:0'/>
    ...
  </query>
</iq>
]]>
</example>

	<p>Support can also be determined via &xep0115;, a.k.a. "caps".</p>
</section1>
<section1 topic='Security Considerations' anchor='security'>
  <p>A user may not wish to disclose that they have received, displayed or acknowledge a message.</p>
  <p>It is possible for a sender to leak its presence when updating Chat Markers; 
    therefore, a sender SHOULD NOT send Chat Markers to recipients who are not otherwise authorized to view its presence.</p>
</section1>
<section1 topic='IANA Considerations' anchor='iana'>
  <p>This document requires no interaction with the Internet Assigned Numbers Authority (IANA).</p>
</section1>
<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
  <section2 topic='Protocol Namespaces' anchor='registrar-ns'>
	<p>This specification defines the following XML namespace:</p>
    <ul>
      <li>'urn:xmpp:chat-markers:0'</li>
    </ul>
  </section2>
</section1>
<section1 topic='XML Schema' anchor='schema'>
  <code>
<![CDATA[
<?xml version='1.0' encoding='UTF-8'?>

<xs:schema attributeFormDefault="unqualified" 
  elementFormDefault="qualified" 
  targetNamespace="urn:xmpp:chat-markers:0" 
  xmlns:xs="http://www.w3.org/2001/XMLSchema">
    
  <xs:annotation>
    <xs:documentation>
      The protocol documented by this schema is defined in
      XEP-XXXX: http://xmpp.org/extensions/xep-XXXX.html
    </xs:documentation>
  </xs:annotation>

  <xs:element name="received">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute type="xs:string" name="id"/>
          <xs:attribute type="xs:string" name="thread"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  
  <xs:element name="displayed">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute type="xs:string" name="id"/>
          <xs:attribute type="xs:string" name="thread"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  
  
  <xs:element name="acknowledged">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute type="xs:string" name="id"/>
          <xs:attribute type="xs:string" name="thread"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

</xs:schema>
]]>
</code>
</section1>
</xep>
