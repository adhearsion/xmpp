<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
<!ENTITY SCTPMAP "&lt;sctpmap/&gt;">
<!ENTITY FINGERPRINT "&lt;fingerprint/&gt;">
<!ENTITY webrtc-protocol "<span class='ref'><link url='http://tools.ietf.org/html/draft-jesup-rtcweb-data-protocol-04'>WebRTC Data Channel Protocol</link></span> <note>WebRTC Data Channel Protocol &lt;<link url='http://tools.ietf.org/html/draft-jesup-rtcweb-data-protocol-04'>http://tools.ietf.org/html/draft-jesup-rtcweb-data-protocol-04</link>&gt;.</note>" >
<!ENTITY rfc3758 "<span class='ref'><link url='http://tools.ietf.org/html/rfc3758'>RFC 3758</link></span> <note>RFC 3758: Stream Control Transmission Protocol (SCTP) Partial Reliability Extension &lt;<link url='http://tools.ietf.org/html/rfc3758'>http://tools.ietf.org/html/rfc3758</link>&gt;.</note>" >
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>Use of DTLS/SCTP in Jingle ICE-UDP</title>
  <abstract>This specification defines how to use the ICE-UDP Jingle transport method to send media data using WebRTC DataChannels, so technically uses DTLS/SCTP on top of the Interactive Connectivity Establishment (ICE) methodology, which provides robust NAT traversal for media traffic.</abstract>
  <legal>
    <copyright>This XMPP Extension Protocol is copyright (c) 1999 - 2013 by the XMPP Standards Foundation (XSF).</copyright>
    <permissions>Permission is hereby granted, free of charge, to any person obtaining a copy of this specification (the &quot;Specification&quot;), to make use of the Specification without restriction, including without limitation the rights to implement the Specification in a software program, deploy the Specification in a network service, and copy, modify, merge, publish, translate, distribute, sublicense, or sell copies of the Specification, and to permit persons to whom the Specification is furnished to do so, subject to the condition that the foregoing copyright notice and this permission notice shall be included in all copies or substantial portions of the Specification. Unless separate permission is granted, modified works that are redistributed shall not contain misleading information regarding the authors, title, number, or publisher of the Specification, and shall not claim endorsement of the modified works by the authors, any organization or project to which the authors belong, or the XMPP Standards Foundation.</permissions>
    <warranty>## NOTE WELL: This Specification is provided on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. In no event shall the XMPP Standards Foundation or the authors of this Specification be liable for any claim, damages, or other liability, whether in an action of contract, tort, or otherwise, arising from, out of, or in connection with the Specification or the implementation, deployment, or other use of the Specification. ##</warranty>
    <liability>In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall the XMPP Standards Foundation or any author of this Specification be liable for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising out of the use or inability to use the Specification (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if the XMPP Standards Foundation or such author has been advised of the possibility of such damages.</liability>
    <conformance>This XMPP Extension Protocol has been contributed in full conformance with the XSF's Intellectual Property Rights Policy (a copy of which may be found at &lt;<link url='http://www.xmpp.org/extensions/ipr-policy.shtml'>http://www.xmpp.org/extensions/ipr-policy.shtml</link>&gt; or obtained by writing to XSF, P.O. Box 1641, Denver, CO 80201 USA).</conformance>
  </legal>
  <number>xxxx</number>
  <status>ProtoXEP</status>
  <type>Standards Track</type>
  <sig>Standards</sig>
  <approver>Council</approver>
  <dependencies>
    <spec>XEP-0176</spec>
    <spec>XEP-0320</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>NOT_YET_ASSIGNED</shortname>
  <author>
    <firstname>Jens</firstname>
    <surname>Bavendiek</surname>
    <email>bavendiek@dbis.rwth-aachen.de</email>
  </author>
  <revision>
    <version>0.0.1</version>
    <date>2013-12-03</date>
    <initials>jab</initials>
    <remark><p>First draft.</p></remark>
  </revision>
</header>
<section1 topic='Introduction' anchor='intro'>
  <p>This document specifies a method for establishing a direct connection using SCTP channels over DTLS. As WebRTC supports the SCTP partial reliability extension (see &rfc3758;), the connection established can either be reliable or partial-reliable. However due to the wider use (e.g. &xep0234;) and easier maintenance, this transport method defines the mandatory use of reliable and in-order-delivery datachannels (thus a streaming transport). If the need for partial-reliability is there, a second specification for datagram type datachannels might be created. The establishment of this connection is managed by &xep0176;. The establishment of security provided by DTLS is described in &xep0320;.</p>
</section1>
<section1 topic='Use Cases' anchor='usecases'>
  <p>There are several use cases. Given below are a few examples:</p>
  <ol>
    <li>Two parties engaged in a WebRTC-based video conference want to share a file via &xep0234;</li>
    <li>A browser application that uses XMPP for communication wants to support file-transfer</li>
    <li>A browser based application wants to send a file to a non-browser client</li>
  </ol>
</section1>
<section1 topic='Jingle Conformance' anchor='conformance'>
   <p>In accordance with Section 10 of <cite>XEP-0166</cite>, this document specifies the following information related to the Jingle DTLS/SCTP transport method:</p>
   <ol>
     <li><p>The transport negotiation process is defined in the <link url='#protocol'>Protocol Description</link> section of this document.</p></li>
     <li><p>The semantics of the &SCTPMAP; element are defined in the <link url='#protocol-syntax'>Syntax</link> section of this document.</p></li>
   </ol>
</section1>
<section1 topic='Protocol Description' anchor='protocol'>
    <p>This protocol requires the Stream Control Transmission Protocol (SCTP) to run within the security context of the Datagram Transport Layer Security (DTLS) protocol. As determined by <cite>RTCWeb Data Channels</cite> running SCTP on top of DTLS is preferred, as in this order the control messages are encrypted as well and the DTLS channel can be shared with several applications</p>
    
  <section2 topic='Session Initiation' anchor='protocol-initiate'>
    <p>In order for the initiator in a Jingle exchange to start the negotiation, it sends a Jingle "session-initiate" stanza that includes at least one content type, as described in <cite>XEP-0166</cite>. If the initiator wishes to negotiate the SCTP transport method for an application format, it MUST include a &SCTPMAP; child element qualified by the 'urn:xmpp:jingle:transports:dtls-sctp:1' namespace &VNOTE;. The &TRANSPORT; element SHOULD in turn contain one &CANDIDATE; element for each of the initiator's higher-priority transport candidates as determined in accordance with the ICE methodology, but MAY instead be empty (with each candidate to be sent as the payload of a transport-info message).</p>
    <example caption="Initiation"><![CDATA[
<iq from='romeo@montague.lit/orchard'
    id='ixt174g9'
    to='juliet@capulet.lit/balcony'
    type='set'>
  <jingle xmlns='urn:xmpp:jingle:1'
          action='session-initiate'
          initiator='romeo@montague.lit/orchard'
          sid='a73sjjvkla37jfea'>
    <content creator='initiator' name='file-552da749930852c69ae5d2141d3766b1'>
      <description xmlns='urn:xmpp:jingle:apps:file-transfer:3'>
        <offer>
          <file>
            <date>1969-07-21T02:56:15Z</date>
            <desc>This is a test. If this were a real file...</desc>
            <name>test.txt</name>
            <range/>
            <size>1022</size>
            <hash xmlns='urn:xmpp:hashes:1' algo='sha-1'>552da749930852c69ae5d2141d3766b1</hash>
          </file>
        </offer>
      </description>
      <transport xmlns='urn:xmpp:jingle:transports:ice-udp:1'
                 pwd='asd88fgpdd777uzjYhagZg'
                 ufrag='8hhy'>
        <sctpmap xmlns='urn:xmpp:jingle:transports:dtls-sctp:1' number='5000' protocol='webrtc-datachannel' streams='1024'/>
        <fingerprint mlns='urn:xmpp:jingle:apps:dtls:0' hash='sha-256' setup='actpass'>
            02:1A:CC:54:27:AB:EB:9C:53:3F:3E:4B:65:2E:7D:46:3F:54:42:CD:54:F1:7A:03:A2:7D:F9:B0:7F:46:19:B2
        </fingerprint>
        <candidate component='1'
                   foundation='1'
                   generation='0'
                   id='el0747fg11'
                   ip='10.0.1.1'
                   network='1'
                   port='8998'
                   priority='2130706431'
                   protocol='udp'
                   type='host'/>
        <candidate component='1'
                   foundation='2'
                   generation='0'
                   id='y3s2b30v3r'
                   ip='192.0.2.3'
                   network='1'
                   port='45664'
                   priority='1694498815'
                   protocol='udp'
                   rel-addr='10.0.1.1'
                   rel-port='8998'
                   type='srflx'/>
      </transport>
    </content>
  </jingle>
</iq>
    ]]></example>
    <p>As seen in the example, there is no notion about DataChannel internals. The only things negotiated here are the port on which the SCTP Stream runs and the name of the DataChannel. Further negotiation is happening through the &webrtc-protocol;, thus the DataChannel is identified through the content name.</p>
  </section2>
  <section2 topic='Syntax' anchor='protocol-syntax'>
  <p>The values and names for the &SCTPMAP; element are taken from the corresponding SDP. The attributes of the &lt;sctpmap/&gt; element are as follows.</p>
    <table caption='Sctmpap Attributes'>
      <tr>
        <th>Name</th>
        <th>Description</th>
        <th>SDP Syntax</th>
        <th>Example</th>
      </tr>
      <tr>
        <td>port</td>
        <td>A port number where the channel is to be contacted</td>
        <td>Port value in a=sctpmap line</td>
        <td>5000</td>
      </tr>
      <tr>
        <td>protocol</td>
        <td>Media format</td>
        <td>Protocol value in a=sctpmap line</td>
        <td>webrtc-datachannel</td>
      </tr>
      <tr>
        <td>streams</td>
        <td>Number of supported incoming streams</td>
        <td>Stream value in a=sctpmap line</td>
        <td>16</td>
      </tr>
    </table>
  </section2>
  <section2 topic='Response' anchor='protocol-response'>
    <p>As described in <cite>XEP-0166</cite>, to acknowledge receipt of the session initiation request, the responder immediately returns an IQ-result.</p>
    <example caption="Responder acknowledges receipt of session-initiate request"><![CDATA[
<iq from='juliet@capulet.lit/balcony'
    id='ixt174g9'
    to='romeo@montague.lit/orchard'
    type='result'/>
    ]]></example>
    <p>Depending on the application type, a user agent controlled by a human user might need to wait for the user to affirm a desire to proceed with the session before continuing. When the user agent has received such affirmation (or if the user agent can automatically proceed for any reason, e.g. because no human intervention is expected or because a human user has configured the user agent to automatically accept sessions with a given entity), it returns a Jingle session-accept message. This message MUST contain a &TRANSPORT; element qualified by the 'urn:xmpp:jingle:transports:ice-udp:1' namespace, which SHOULD in turn contain one &SCTPMAP; element qualified by the 'urn:xmpp:jingle:transports:dtls-sctp:1' namespace for the channel used by the responder.</p>
     <p>Note: See the <link url='#security'>Security Considerations</link> section of this document regarding the exposure of IP addresses by the responder's client.</p>
    <example caption="Responder accepts the session request"><![CDATA[
<iq from='juliet@capulet.lit/balcony'
    id='rw782g55'
    to='romeo@montague.lit/orchard'
    type='set'>
  <jingle xmlns='urn:xmpp:jingle:1'
          action='session-accept'
          initiator='romeo@montague.lit/orchard'
          responder='juliet@capulet.lit/balcony'
          sid='a73sjjvkla37jfea'>
    <content creator='initiator' name='file-552da749930852c69ae5d2141d3766b1'>
      <description xmlns='urn:xmpp:jingle:apps:file-transfer:3'>
        <offer>
          <file>
            <date>1969-07-21T02:56:15Z</date>
            <desc>This is a test. If this were a real file...</desc>
            <name>test.txt</name>
            <range/>
            <size>1022</size>
            <hash xmlns='urn:xmpp:hashes:1' algo='sha-1'>552da749930852c69ae5d2141d3766b1</hash>
          </file>
        </offer>
      </description>
      <transport xmlns='urn:xmpp:jingle:transports:ice-udp:1'
                 pwd='YH75Fviy6338Vbrhrlp8Yh'
                 ufrag='9uB6'>
        <fingerprint xmlns='urn:xmpp:jingle:apps:dtls:0' hash='sha-256' setup='actpass'>
            02:1A:CC:54:27:AB:EB:9C:53:3F:3E:4B:65:2E:7D:46:3F:54:42:CD:54:F1:7A:03:A2:7D:F9:B0:7F:46:19:B2
        </fingerprint>
        <sctpmap xmlns='urn:xmpp:jingle:transports:dtls-sctp:1' number='5000' protocol='webrtc-datachannel' streams='1024'/>
        <candidate component='1'
                   foundation='1'
                   generation='0'
                   id='or2ii2syr1'
                   ip='192.0.2.1'
                   network='0'
                   port='3478'
                   priority='2130706431'
                   protocol='udp'
                   type='host'/>
      </transport>
    </content>
  </jingle>
</iq>
    ]]></example>
    <p>The initiator acknowledges the Jingle session-accept.</p>
    <example caption="Initiator acknowledges session-accept."><![CDATA[
<iq from='juliet@capulet.lit/balcony'
    id='ixt174g9'
    to='romeo@montague.lit/orchard'
    type='result'/>
    ]]></example>
  </section2>
  <section2 topic='Adding a new channel' anchor='protocol-add'>
    <p>Even after media has begun to flow, either party MAY continue to send additional channels to the other party (e.g., because the user wants to transmit a new file). Such events are shared by sending a content-add message.</p>
    <example caption="Initiator sends a content-add"><![CDATA[
<iq from='romeo@montague.lit/orchard'
    id='uh3g1f48'
    to='juliet@capulet.lit/balcony'
    type='set'>
  <jingle xmlns='urn:xmpp:jingle:1'
          action='content-add'
          initiator='romeo@montague.lit/orchard'
          sid='a73sjjvkla37jfea'>
    <content creator='initiator' name='this-is-the-new-content'>
      <description xmlns='urn:xmpp:jingle:apps:some-file' media='file'/>
      <transport xmlns='urn:xmpp:jingle:transports:ice-udp:1'/>
    </content>
  </jingle>
</iq>
    ]]></example>
    <p>The receiving party MUST acknowledge receipt.</p>
    <example caption="Recipient acknowledges receipt"><![CDATA[
<iq from='juliet@capulet.lit/balcony'
    id='uh3g1f48'
    to='romeo@montague.lit/orchard'
    type='result'/>
    ]]></example>
  </section2>
</section1>
<section1 topic='Security Considerations' anchor='security'>
  <p>By design is the sent media already encrypted by the DTLS layer</p>
</section1>
<section1 topic='Acknowledgements' anchor='acks'>
  <p>Special thanks to István Koren at i5 and their <link url='http://dbis.rwth-aachen.de/cms/projects/the-xmpp-experience/'>XMPP Experience</link></p>
  <p>Thanks to Philipp Hancke and Tobias Markmann for their help and support and all the XEP-Authors for their examples.</p>
</section1>
<section1 topic='IANA Considerations' anchor='iana'>
  <p>This document requires no interaction with &IANA;.</p>
</section1>
<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
  <section2 topic='Protocol Namespaces' anchor='registrar-ns'>
    <p>This specification defines the following XML namespace:</p>
    <ul>
      <li>urn:xmpp:jingle:transports:dtls-sctp:1</li>
    </ul>
    <p>The &REGISTRAR; includes the foregoing namespace in its registry at &NAMESPACES;, as governed by &xep0053;.</p>
  </section2>
  <section2 topic='Protocol Versioning' anchor='registrar-versioning'>
    &NSVER;
  </section2>
  <section2 topic='SCTP Mapping' anchor='registrar-features'>
    <p>The registry submission is as follows.</p>
    <code><![CDATA[
<var>
  <name>IETF Draft MMUSIC</name>
  <desc>
    Signals support for SCTP in the SDP as described in draft-ietf-mmusic-sctp-sdp-05
  </desc>
  <doc>XEP-SCTP</doc>
</var>
    ]]></code>
  </section2>
</section1>
<section1 topic='XML Schema' anchor='schema'>
  <code><![CDATA[
<?xml version='1.0' encoding='UTF-8'?>

<xs:schema
    xmlns:xs='http://www.w3.org/2001/XMLSchema'
    targetNamespace='urn:xmpp:jingle:transports:dtls-sctp:1'
    xmlns='urn:xmpp:jingle:transports:dtls-sctp:1'
    elementFormDefault='qualified'>

  <xs:annotation>
    <xs:documentation>
      The protocol documented by this schema is defined in
      XEP-xxxx: http://www.xmpp.org/extensions/xep-xxxx.html
    </xs:documentation>
  </xs:annotation>

  <xs:element name='sctpmap'>
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base='xs:string'>
          <xs:attribute name='number' type='xs:unsignedByte' use='required'/>
          <xs:attribute name='protocol' type='xs:string' use='required'/>
          <xs:attribute name='streams' type='xs:positiveInteger' use='optional'/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>

</xs:schema>
  ]]></code>
</section1>
</xep>
